name: Publish Documentation to GitHub Pages

on:
  push:
    branches:
      - master
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions: read-all

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  document:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: "Install poetry"
        run: pipx install poetry
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "poetry"
      - run: poetry install
      - run: poetry run pdoc --include-undocumented --docformat markdown --show-source --search python_snippets --output-directory ./output/
      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "output/"
          retention-days: 3

  deploy:
    runs-on: ubuntu-latest
    needs: document
    if: github.ref == 'refs/heads/master'

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
